// <auto-generated />
using System;
using BlogSystemApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogSystemApp.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20250625083335_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("BlogSystemApp.Models.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ViewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Admin",
                            Content = "This is the first post on my new blog system. Welcome to all readers!",
                            CreatedDate = new DateTime(2025, 6, 25, 11, 33, 32, 40, DateTimeKind.Local).AddTicks(114),
                            IsPublished = true,
                            Summary = "A welcome message to introduce the blog.",
                            Tags = "welcome, introduction",
                            Title = "Welcome to My Blog",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            Author = "Admin",
                            Content = "ASP.NET Core is a powerful framework for building modern web applications. In this post, we'll explore the basics of creating a web application with ASP.NET Core MVC.",
                            CreatedDate = new DateTime(2025, 6, 24, 11, 33, 32, 40, DateTimeKind.Local).AddTicks(120),
                            IsPublished = true,
                            Summary = "An introduction to ASP.NET Core MVC development.",
                            Tags = "asp.net, core, mvc, tutorial",
                            Title = "Getting Started with ASP.NET Core",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("BlogSystemApp.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("BlogPostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BlogSystemApp.Models.Comment", b =>
                {
                    b.HasOne("BlogSystemApp.Models.BlogPost", "BlogPost")
                        .WithMany()
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogPost");
                });
#pragma warning restore 612, 618
        }
    }
}
