@model BlogSystemApp.Models.Post

<article class="card blog-post-card shadow-sm mb-4">
    <div class="blog-image-container">
        <img src="@(!string.IsNullOrEmpty(Model.FeaturedImage) ? Model.FeaturedImage : "/images/default-post.svg")" 
             class="card-img-top blog-featured-image" 
             alt="@Model.Title">
    </div>
    
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-start mb-3">
            <div class="blog-meta">
                <span class="badge bg-primary me-2">
                    <i class="fas fa-folder me-1"></i>@Model.CategoryName
                </span>
                @if (Model.IsFeatured)
                {
                    <span class="badge bg-warning text-dark">
                        <i class="fas fa-star me-1"></i>Featured
                    </span>
                }
            </div>
            <small class="text-muted">
                <i class="fas fa-eye me-1"></i>@Model.ViewCount views
            </small>
        </div>
        
        <h5 class="card-title">
            <a href="@Url.Action("Details", "Blog", new { id = Model.Id })" 
               class="text-decoration-none text-dark blog-post-title">
                @Model.Title
            </a>
        </h5>
        
        <div class="blog-post-meta mb-3">
            <small class="text-muted">
                <i class="fas fa-user me-1"></i>By @Model.AuthorName
                <span class="mx-2">•</span>
                <i class="fas fa-calendar me-1"></i>@Model.PublicationDate.ToString("MMMM dd, yyyy")
                <span class="mx-2">•</span>
                <i class="fas fa-comments me-1"></i>@Model.CommentCount comments
            </small>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.Summary))
        {
            <p class="card-text text-muted">@Model.Summary</p>
        }
        else
        {
            <p class="card-text text-muted">
                @Html.Raw(Model.Content.Length > 150 ? Model.Content.Substring(0, 150) + "..." : Model.Content)
            </p>
        }
        
        @if (!string.IsNullOrEmpty(Model.Tags))
        {
            <div class="blog-tags mb-3">
                @foreach (var tag in Model.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries))
                {
                    <span class="badge bg-light text-dark me-1">
                        <i class="fas fa-tag me-1"></i>@tag.Trim()
                    </span>
                }
            </div>
        }
        
        <div class="d-flex justify-content-between align-items-center">
            <a href="@Url.Action("Details", "Blog", new { id = Model.Id })" 
               class="btn btn-primary btn-sm">
                <i class="fas fa-book-open me-1"></i>Read More
            </a>
            <div class="blog-post-actions">
                @if (User.Identity!.IsAuthenticated && (User.FindFirst("UserId")?.Value == Model.AuthorId.ToString() || User.IsInRole("Admin")))
                {
                    <a href="@Url.Action("Edit", "Blog", new { id = Model.Id })" 
                       class="btn btn-outline-secondary btn-sm me-1">
                        <i class="fas fa-edit"></i>
                    </a>
                    <a href="@Url.Action("Delete", "Blog", new { id = Model.Id })" 
                       class="btn btn-outline-danger btn-sm">
                        <i class="fas fa-trash"></i>
                    </a>
                }
            </div>
        </div>
    </div>
</article>
