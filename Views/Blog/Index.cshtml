@model BlogSystemApp.Models.ViewModels.BlogIndexViewModel

@{
    ViewData["Title"] = "All Blog Posts";
    ViewData["BreadcrumbItems"] = new List<(string Text, string? Url)>
    {
        ("Blog", null)
    };
    ViewData["SearchQuery"] = Model.SearchTerm;
    ViewData["CategoryFilter"] = ViewBag.SelectedCategoryId?.ToString();
    ViewData["Categories"] = ViewBag.Categories;
    
    // Pagination data
    ViewData["CurrentPage"] = Model.CurrentPage;
    ViewData["TotalPages"] = Model.TotalPages;
    ViewData["TotalItems"] = Model.TotalPosts;
    ViewData["PageSize"] = Model.PageSize;
}

@section Head {
    <style>
        .blog-header {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            border-radius: 1rem;
            padding: 2rem;
            margin-bottom: 2rem;
            text-align: center;
        }
        
        .blog-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 2rem;
        }
        
        .featured-section {
            background: linear-gradient(135deg, #fef3c7 0%, #fcd34d 100%);
            border-radius: 1rem;
            padding: 2rem;
            margin-bottom: 3rem;
            border-left: 4px solid #f59e0b;
        }
        
        .view-toggle {
            background: white;
            border-radius: 0.5rem;
            padding: 0.5rem;
            box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
        }
        
        .view-toggle .btn {
            border-radius: 0.25rem;
            margin: 0 0.125rem;
        }
        
        @@media (max-width: 768px) {
            .blog-grid {
                grid-template-columns: 1fr;
            }
            
            .blog-header {
                padding: 1.5rem;
            }
        }
    </style>
}

<!-- Blog Header -->
<div class="blog-header">
    <h1 class="mb-3">
        <i class="fas fa-newspaper me-2 text-primary"></i>
        Discover Amazing Stories
    </h1>
    <p class="lead text-muted mb-4">
        Explore our collection of articles, insights, and ideas from talented writers around the world.
    </p>
    @if (User.Identity!.IsAuthenticated)
    {
        <a asp-action="Create" class="btn btn-primary btn-lg">
            <i class="fas fa-pen me-2"></i>
            Write Your Story
        </a>
    }
</div>

<!-- Search and Filter Section -->
@await Html.PartialAsync("Partials/_SearchAndFilter")

<!-- Featured Posts Section -->
@if (Model.FeaturedPosts.Any())
{
    <div class="featured-section">
        <div class="d-flex align-items-center mb-3">
            <i class="fas fa-star text-warning me-2 fa-lg"></i>
            <h3 class="mb-0">Featured Posts</h3>
        </div>
        <p class="text-muted mb-4">Hand-picked articles that you shouldn't miss</p>
        
        <div class="row">
            @foreach (var featured in Model.FeaturedPosts)
            {
                <div class="col-lg-4 col-md-6 mb-3">
                    <div class="card h-100 border-warning shadow-sm">
                        <img src="@(!string.IsNullOrEmpty(featured.FeaturedImage) ? featured.FeaturedImage : "/images/default-post.svg")" 
                             class="card-img-top" alt="@featured.Title" style="height: 200px; object-fit: cover;">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <span class="badge bg-warning text-dark">
                                    <i class="fas fa-star me-1"></i>Featured
                                </span>
                                <small class="text-muted">
                                    <i class="fas fa-eye me-1"></i>@featured.ViewCount
                                </small>
                            </div>
                            <h5 class="card-title">
                                <a asp-action="Details" asp-route-id="@featured.Id" 
                                   class="text-decoration-none text-dark">@featured.Title</a>
                            </h5>
                            <p class="card-text text-muted">
                                @(featured.Summary ?? (featured.Content.Length > 100 ? featured.Content.Substring(0, 100) + "..." : featured.Content))
                            </p>
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    <i class="fas fa-user me-1"></i>@featured.AuthorName
                                    <span class="mx-1">â€¢</span>
                                    <i class="fas fa-calendar me-1"></i>@featured.PublicationDate.ToString("MMM dd")
                                </small>
                                <a asp-action="Details" asp-route-id="@featured.Id" 
                                   class="btn btn-outline-warning btn-sm">
                                    <i class="fas fa-arrow-right"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

<!-- Posts Section Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2>
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <span>Search Results for "@Model.SearchTerm"</span>
            }
            else if (ViewBag.SelectedCategoryId != null)
            {
                <span>Posts in @ViewBag.SelectedCategoryName</span>
            }
            else
            {
                <span>All Posts</span>
            }
        </h2>
        <small class="text-muted">@Model.TotalPosts posts found</small>
    </div>
    
    <!-- View Toggle (Optional future feature) -->
    <div class="view-toggle d-none d-md-flex">
        <button class="btn btn-sm btn-primary" data-view="grid" title="Grid View">
            <i class="fas fa-th"></i>
        </button>
        <button class="btn btn-sm btn-outline-secondary" data-view="list" title="List View">
            <i class="fas fa-list"></i>
        </button>
    </div>
</div>

<!-- Posts Grid -->
@if (Model.Posts.Any())
{
    <div class="blog-grid mb-5" id="postsContainer">
        @foreach (var post in Model.Posts)
        {
            @await Html.PartialAsync("Partials/_BlogPostCard", post)
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <div class="mb-4">
            <i class="fas fa-search fa-4x text-muted"></i>
        </div>
        <h3 class="text-muted mb-3">No Posts Found</h3>
        <p class="text-muted mb-4">
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <span>We couldn't find any posts matching "@Model.SearchTerm". Try a different search term.</span>
            }
            else
            {
                <span>No posts have been published yet. Be the first to share your story!</span>
            }
        </p>
        @if (!string.IsNullOrEmpty(Model.SearchTerm) || ViewBag.SelectedCategoryId != null)
        {
            <a asp-action="Index" class="btn btn-primary me-3">
                <i class="fas fa-arrow-left me-2"></i>
                View All Posts
            </a>
        }
        @if (User.Identity!.IsAuthenticated)
        {
            <a asp-action="Create" class="btn btn-success">
                <i class="fas fa-plus me-2"></i>
                Create New Post
            </a>
        }
    </div>
}

<!-- Pagination -->
@await Html.PartialAsync("Partials/_Pagination")

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // View toggle functionality (optional)
            const viewButtons = document.querySelectorAll('[data-view]');
            const postsContainer = document.getElementById('postsContainer');
            
            viewButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const view = this.getAttribute('data-view');
                    
                    // Update button states
                    viewButtons.forEach(btn => {
                        btn.classList.remove('btn-primary');
                        btn.classList.add('btn-outline-secondary');
                    });
                    this.classList.add('btn-primary');
                    this.classList.remove('btn-outline-secondary');
                    
                    // Toggle view
                    if (view === 'list') {
                        postsContainer.style.gridTemplateColumns = '1fr';
                    } else {
                        postsContainer.style.gridTemplateColumns = 'repeat(auto-fill, minmax(350px, 1fr))';
                    }
                    
                    // Save preference
                    localStorage.setItem('blogViewPreference', view);
                });
            });
            
            // Load saved view preference
            const savedView = localStorage.getItem('blogViewPreference');
            if (savedView) {
                const savedButton = document.querySelector(`[data-view="${savedView}"]`);
                if (savedButton) {
                    savedButton.click();
                }
            }
        });
    </script>
}
