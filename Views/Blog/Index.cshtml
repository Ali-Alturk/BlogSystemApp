@model BlogSystemApp.Models.ViewModels.BlogIndexViewModel

@{
    ViewData["Title"] = "Blog Posts";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Blog Posts</h1>
    <a asp-action="Create" class="btn btn-primary">Create New Post</a>
</div>

@if (Model.FeaturedPosts.Any())
{
    <div class="row mb-5">
        <div class="col-12">
            <h3 class="mb-3">Featured Posts</h3>
            <div class="row">
                @foreach (var featured in Model.FeaturedPosts)
                {
                    <div class="col-md-4 mb-3">
                        <div class="card h-100 border-primary">
                            <div class="card-body">
                                <span class="badge bg-primary mb-2">Featured</span>
                                <h5 class="card-title">
                                    <a asp-action="Details" asp-route-id="@featured.Id" class="text-decoration-none">@featured.Title</a>
                                </h5>
                                <p class="card-text">@(featured.Summary ?? (featured.Content.Length > 100 ? featured.Content.Substring(0, 100) + "..." : featured.Content))</p>
                                <div class="d-flex justify-content-between">
                                    <small class="text-muted">By @featured.AuthorName</small>
                                    <small class="text-muted">@featured.ViewCount views</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

<form asp-action="Index" method="get" class="mb-4">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="text" name="SearchString" value="@Model.SearchTerm" placeholder="Search posts..." class="form-control" />
            </div>
        </div>
        <div class="col-md-3">
            <select name="categoryId" class="form-select">
                <option value="">All Categories</option>
                @foreach (var category in Model.Categories)
                {
                    <option value="@category.Id" selected="@(Model.CategoryId == category.Id)">@category.Name</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <select name="sortOrder" class="form-select">
                <option value="">Sort by Date (Newest)</option>
                <option value="date_desc" selected="@(Model.SortOrder == "date_desc")">Sort by Date (Newest)</option>
                <option value="Date" selected="@(Model.SortOrder == "Date")">Sort by Date (Oldest)</option>
                <option value="title_desc" selected="@(Model.SortOrder == "title_desc")">Sort by Title (Z-A)</option>
                <option value="" selected="@(Model.SortOrder == "")">Sort by Title (A-Z)</option>
            </select>
        </div>
        <div class="col-md-3">
            <input type="submit" value="Search" class="btn btn-outline-primary" />
            <a asp-action="Index" class="btn btn-outline-secondary">Clear</a>
        </div>
    </div>
</form>

@if (Model.Posts.Any())
{
    <div class="row">
        @foreach (var item in Model.Posts)
        {
            <div class="col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title">
                                <a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none">@item.Title</a>
                            </h5>
                            @if (item.Category != null)
                            {
                                <span class="badge" style="background-color: @item.Category.Color">@item.CategoryName</span>
                            }
                        </div>
                        <p class="card-text">@(item.Summary ?? (item.Content.Length > 150 ? item.Content.Substring(0, 150) + "..." : item.Content))</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                By @item.AuthorName on @item.PublicationDate.ToString("MMM dd, yyyy")
                            </small>
                            <small class="text-muted">
                                @item.ViewCount views
                            </small>
                        </div>
                        @if (!string.IsNullOrEmpty(item.Tags))
                        {
                            <div class="mt-2">
                                @foreach (var tag in item.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                {
                                    <span class="badge bg-secondary me-1">@tag.Trim()</span>
                                }
                            </div>
                        }
                    </div>
                    <div class="card-footer">
                        <div class="btn-group w-100" role="group">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">Read More</a>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">Delete</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Blog pagination">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-searchString="@Model.SearchTerm" asp-route-sortOrder="@Model.SortOrder" asp-route-categoryId="@Model.CategoryId">Previous</a>
                    </li>
                }

                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-searchString="@Model.SearchTerm" asp-route-sortOrder="@Model.SortOrder" asp-route-categoryId="@Model.CategoryId">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-searchString="@Model.SearchTerm" asp-route-sortOrder="@Model.SortOrder" asp-route-categoryId="@Model.CategoryId">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }
}
else
{
    <div class="alert alert-info" role="alert">
        <h4 class="alert-heading">No blog posts found!</h4>
        <p>There are currently no published blog posts. Be the first to create one!</p>
        <hr>
        <a class="btn btn-primary" asp-action="Create">Create First Post</a>
    </div>
}
