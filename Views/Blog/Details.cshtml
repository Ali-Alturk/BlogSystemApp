@model BlogSystemApp.Models.ViewModels.PostDetailsViewModel

@{
    ViewData["Title"] = Model.Post.Title;
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">Blog Posts</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Model.Post.Title</li>
    </ol>
</nav>

<article class="blog-post">
    <header class="mb-4">
        <div class="d-flex justify-content-between align-items-start mb-3">
            <h1 class="blog-post-title">@Model.Post.Title</h1>
            @if (Model.Post.Category != null)
            {
                <span class="badge fs-6" style="background-color: @Model.Post.Category.Color">@Model.Post.CategoryName</span>
            }
        </div>
        
        <div class="blog-post-meta">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <small class="text-muted">
                        By <strong>@Model.Post.AuthorName</strong> on @Model.Post.PublicationDate.ToString("MMMM dd, yyyy")
                        @if (Model.Post.UpdatedDate.HasValue)
                        {
                            <span> (Updated: @Model.Post.UpdatedDate.Value.ToString("MMMM dd, yyyy"))</span>
                        }
                    </small>
                </div>
                <div>
                    <small class="text-muted">@Model.Post.ViewCount views • @Model.Post.CommentCount comments</small>
                </div>
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.Post.Tags))
        {
            <div class="mt-2">
                @foreach (var tag in Model.Post.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries))
                {
                    <span class="badge bg-primary me-1">@tag.Trim()</span>
                }
            </div>
        }
    </header>

    @if (!string.IsNullOrEmpty(Model.Post.FeaturedImage) || true)
    {
        <div class="blog-featured-image-container mb-4">
            <img src="@(!string.IsNullOrEmpty(Model.Post.FeaturedImage) ? Model.Post.FeaturedImage : "/images/default-post.svg")" 
                 class="img-fluid rounded shadow-sm" 
                 alt="@Model.Post.Title"
                 style="width: 100%; max-height: 400px; object-fit: cover;">
        </div>
    }

    <div class="blog-post-content">
        @Html.Raw(Model.Post.Content.Replace("\n", "<br />"))
    </div>
</article>

<hr class="my-4">

<div class="row">
    <div class="col-md-8">
        <div class="d-flex justify-content-start">
            <a asp-action="Index" class="btn btn-outline-secondary me-2">← Back to Posts</a>
        </div>
    </div>
    <div class="col-md-4">
        <div class="d-flex justify-content-end">
            <a asp-action="Edit" asp-route-id="@Model.Post.Id" class="btn btn-outline-primary me-2">Edit</a>
            <a asp-action="Delete" asp-route-id="@Model.Post.Id" class="btn btn-outline-danger">Delete</a>
        </div>
    </div>
</div>

@if (Model.RelatedPosts.Any())
{
    <hr class="my-4">
    <div class="card">
        <div class="card-header">
            <h5>Related Posts</h5>
        </div>
        <div class="card-body">
            <div class="row">
                @foreach (var relatedPost in Model.RelatedPosts)
                {
                    <div class="col-md-4 mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <h6 class="card-title">
                                    <a asp-action="Details" asp-route-id="@relatedPost.Id" class="text-decoration-none">@relatedPost.Title</a>
                                </h6>
                                <p class="card-text small">@(relatedPost.Summary ?? (relatedPost.Content.Length > 80 ? relatedPost.Content.Substring(0, 80) + "..." : relatedPost.Content))</p>
                                <small class="text-muted">By @relatedPost.AuthorName</small>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

<hr class="my-4">

<!-- Comments Section -->
<div class="card">
    <div class="card-header">
        <h5>Comments (@Model.Comments.Count())</h5>
    </div>
    <div class="card-body">
        @if (Model.Comments.Any())
        {
            @foreach (var comment in Model.Comments)
            {
                <div class="border-bottom mb-3 pb-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <strong>@comment.AuthorDisplayName</strong>
                            @if (comment.IsRegisteredUser)
                            {
                                <span class="badge bg-success ms-1">Verified User</span>
                            }
                        </div>
                        <small class="text-muted">@comment.CommentDate.ToString("MMM dd, yyyy HH:mm")</small>
                    </div>
                    <p class="mt-2 mb-0">@Html.Raw(comment.Content.Replace("\n", "<br />"))</p>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No comments yet. Be the first to comment!</p>
        }

        <!-- Comment Form -->
        <hr>
        <h6>Leave a Comment</h6>
        <form asp-controller="Comment" asp-action="Create" method="post">
            <input type="hidden" asp-for="NewComment.PostId" />
            
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="NewComment.AnonymousName" class="form-label">Name</label>
                    <input asp-for="NewComment.AnonymousName" class="form-control" placeholder="Your name" />
                    <span asp-validation-for="NewComment.AnonymousName" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="NewComment.AnonymousEmail" class="form-label">Email</label>
                    <input asp-for="NewComment.AnonymousEmail" class="form-control" placeholder="your@email.com" />
                    <span asp-validation-for="NewComment.AnonymousEmail" class="text-danger"></span>
                </div>
            </div>
            
            <div class="mb-3">
                <label asp-for="NewComment.AnonymousWebsite" class="form-label">Website (Optional)</label>
                <input asp-for="NewComment.AnonymousWebsite" class="form-control" placeholder="https://yourwebsite.com" />
                <span asp-validation-for="NewComment.AnonymousWebsite" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label asp-for="NewComment.Content" class="form-label">Comment</label>
                <textarea asp-for="NewComment.Content" class="form-control" rows="4" placeholder="Share your thoughts..."></textarea>
                <span asp-validation-for="NewComment.Content" class="text-danger"></span>
            </div>
            
            <button type="submit" class="btn btn-primary">Post Comment</button>
        </form>
    </div>
</div>

<hr class="my-4">

<div class="card">
    <div class="card-header">
        <h5>Post Information</h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <strong>Author:</strong> @Model.Post.AuthorName<br>
                <strong>Category:</strong> @Model.Post.CategoryName<br>
                <strong>Published:</strong> @Model.Post.PublicationDate.ToString("MMMM dd, yyyy HH:mm")<br>
                @if (Model.Post.UpdatedDate.HasValue)
                {
                    <strong>Last Updated:</strong> @Model.Post.UpdatedDate.Value.ToString("MMMM dd, yyyy HH:mm")<br>
                }
            </div>
            <div class="col-md-6">
                <strong>Views:</strong> @Model.Post.ViewCount<br>
                <strong>Comments:</strong> @Model.Post.CommentCount<br>
                <strong>Status:</strong> @(Model.Post.IsPublished ? "Published" : "Draft")<br>
                <strong>Featured:</strong> @(Model.Post.IsFeatured ? "Yes" : "No")<br>
                <strong>Tags:</strong> @(string.IsNullOrEmpty(Model.Post.Tags) ? "None" : Model.Post.Tags)
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
